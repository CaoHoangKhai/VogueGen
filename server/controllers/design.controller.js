const MongoDB = require("../utils/mongodb.util");
const DesignService = require("../services/design.service");
const ProductServer = require("../services/product.service");
const { ObjectId } = require("mongodb");

exports.createDesign = async (req, res) => {
    try {
        const { manguoidung, theloai, masanpham, mausac } = req.body;

        console.log("üü° [CREATE DESIGN] req.body:", req.body);

        const designService = new DesignService(MongoDB.client);
        const result = await designService.createDesign({ manguoidung, theloai, masanpham, mausac });

        console.log("üü¢ [CREATE DESIGN] Result:", result);

        res.status(result.success ? 201 : 400).json(result);
    } catch (error) {
        console.error("üî¥ [CREATE DESIGN] Error:", error);
        res.status(500).json({ success: false, message: "L·ªói server khi l∆∞u thi·∫øt k·∫ø ·∫£nh.", error: error.message });
    }
};

exports.getDesignsByUser = async (req, res) => {
    try {
        const { manguoidung } = req.params;
        console.log("üì¶ [GET DESIGNS BY USER] userId:", manguoidung);

        const designService = new DesignService(MongoDB.client);
        const designs = await designService.getDesignsByUser(manguoidung);

        console.log("üì§ [GET DESIGNS BY USER] Designs:", designs.length);
        res.status(200).json(designs);
    } catch (error) {
        console.error("‚ùå [GET DESIGNS BY USER] Error:", error);
        res.status(500).json({ success: false, message: "L·ªói server khi l·∫•y danh s√°ch thi·∫øt k·∫ø.", error: error.message });
    }
};

exports.getDesignDetail = async (req, res) => {
    try {
        const { designId } = req.params; // ‚úÖ updated
        console.log("üîé [GET DESIGN DETAIL] ID:", designId);

        if (!ObjectId.isValid(designId)) {
            return res.status(400).json({ success: false, message: "ID thi·∫øt k·∫ø kh√¥ng h·ª£p l·ªá." });
        }

        const designService = new DesignService(MongoDB.client);
        const result = await designService.getDesignDetail(new ObjectId(designId));

        res.status(result.success ? 200 : 404).json(result);
    } catch (error) {
        res.status(500).json({ success: false, message: "L·ªói server khi l·∫•y chi ti·∫øt thi·∫øt k·∫ø.", error: error.message });
    }
};

exports.renameDesign = async (req, res) => {
    try {
        const { designId } = req.params; // ‚úÖ updated
        const { ten } = req.body;

        if (!ten || ten.trim() === "") {
            return res.status(400).json({ success: false, message: "T√™n kh√¥ng h·ª£p l·ªá." });
        }

        const designService = new DesignService(MongoDB.client);
        const result = await designService.renameDesign(designId, ten.trim());

        res.json(result);
    } catch (err) {
        res.status(500).json({ success: false, message: "L·ªói ƒë·ªïi t√™n", error: err.message });
    }
};

exports.deleteDesign = async (req, res) => {
    try {
        const { designId } = req.params; // ‚úÖ updated
        const designService = new DesignService(MongoDB.client);
        const result = await designService.deleteDesign(designId);
        res.json(result);
    } catch (err) {
        res.status(500).json({ success: false, message: "L·ªói khi x√≥a thi·∫øt k·∫ø", error: err.message });
    }
};
// exports.saveUserDesign = async (req, res) => {
//     try {
//         const { designId, tshirtColor, designData } = req.body;
//         console.log("üìù [SAVE USER DESIGN] req.body:", req.body);

//         if (!designId || !designData || !tshirtColor) {
//             console.warn("‚ö†Ô∏è [SAVE USER DESIGN] Missing fields");
//             return res.status(400).json({ success: false, message: "Thi·∫øu d·ªØ li·ªáu: designId, tshirtColor ho·∫∑c designData." });
//         }

//         const designService = new DesignService(MongoDB.client);
//         const result = await designService.saveUserDesignFull({ designId, color: tshirtColor, designData });

//         console.log("‚úÖ [SAVE USER DESIGN] Result:", result);
//         return res.status(200).json(result);
//     } catch (error) {
//         console.error("‚ùå [SAVE USER DESIGN] Error:", error);
//         return res.status(500).json({ success: false, message: "L·ªói server khi l∆∞u thi·∫øt k·∫ø.", error: error.message });
//     }
// };

exports.saveUserDesign = async (req, res) => {
    try {
        const { designId, tshirtColor, designData } = req.body;

        console.log("üìù [SAVE USER DESIGN] D·ªØ li·ªáu nh·∫≠n t·ª´ frontend:");
        console.log("üëâ designId:", designId);
        console.log("üëâ tshirtColor:", tshirtColor);
        console.log("üëâ designData:", JSON.stringify(designData, null, 2));

        if (!designId || !designData || !tshirtColor) {
            return res.status(400).json({
                success: false,
                message: "Thi·∫øu d·ªØ li·ªáu: designId, tshirtColor ho·∫∑c designData.",
            });
        }

        // ‚ùå Kh√¥ng l∆∞u v√†o DB, ch·ªâ ph·∫£n h·ªìi l·∫°i cho frontend
        return res.status(200).json({
            success: true,
            message: "ƒê√£ nh·∫≠n d·ªØ li·ªáu th√†nh c√¥ng!",
            received: {
                designId,
                tshirtColor,
                designData,
            },
        });
    } catch (error) {
        console.error("‚ùå [SAVE USER DESIGN] Error:", error);
        return res.status(500).json({
            success: false,
            message: "L·ªói server khi x·ª≠ l√Ω d·ªØ li·ªáu.",
            error: error.message,
        });
    }
};


exports.getUserDesignByDesignId = async (req, res) => {
    try {
        const { designId } = req.params;
        console.log("üîé [GET USER DESIGN] designId:", designId);

        const designService = new DesignService(MongoDB.client);
        const result = await designService.getUserDesignByDesignId(designId);

        if (!result.success) {
            console.warn("‚ö†Ô∏è [GET USER DESIGN] Not found");
            return res.status(404).json(result);
        }

        console.log("üì• [GET USER DESIGN] Success:", result);
        res.status(200).json(result);
    } catch (error) {
        console.error("‚ùå [GET USER DESIGN] Error:", error);
        res.status(500).json({ success: false, message: "L·ªói server khi l·∫•y thi·∫øt k·∫ø ng∆∞·ªùi d√πng.", error: error.message });
    }
};


exports.getColorFromDesign = async (req, res) => {
    try {
        const { designId } = req.params;
        // console.log("üé® [GET COLOR FROM DESIGN] designId:", designId);

        if (!ObjectId.isValid(designId)) {
            // console.warn("‚ö†Ô∏è [GET COLOR FROM DESIGN] ID kh√¥ng h·ª£p l·ªá");
            return res.status(400).json({ success: false, message: "M√£ thi·∫øt k·∫ø kh√¥ng h·ª£p l·ªá." });
        }

        const designService = new DesignService(MongoDB.client);
        const result = await designService.getColorFromDesign(designId);

        if (!result.success) {
            // console.warn("‚ö†Ô∏è [GET COLOR FROM DESIGN] Kh√¥ng t√¨m th·∫•y m√†u");
            return res.status(404).json(result);
        }

        // console.log("‚úÖ [GET COLOR FROM DESIGN] Result:", result);
        return res.status(200).json(result);
    } catch (err) {
        // console.error("üî• [GET COLOR FROM DESIGN] Error:", err);
        return res.status(500).json({ success: false, message: "L·ªói server.", error: err.message });
    }
};

exports.getImagesByColorDesign = async (req, res) => {
    try {
        const { productId, color } = req.params;

        // console.log("üì• [getImagesByColorDesign] Nh·∫≠n request v·ªõi params:");
        // console.log("‚û°Ô∏è productId:", productId);
        // console.log("‚û°Ô∏è color:", color);

        // Ki·ªÉm tra h·ª£p l·ªá
        if (!ObjectId.isValid(productId) || !/^#[0-9A-Fa-f]{6}$/.test(decodeURIComponent(color))) {
            console.warn("‚ö†Ô∏è Tham s·ªë kh√¥ng h·ª£p l·ªá:", { productId, color });
            return res.status(400).json({
                success: false,
                message: "Tham s·ªë kh√¥ng h·ª£p l·ªá (productId ho·∫∑c color)"
            });
        }

        const decodedColor = decodeURIComponent(color);
        // console.log("‚úÖ M√†u sau decode:", decodedColor);

        const designService = new DesignService(MongoDB.client);

        // console.log("üîç ƒêang g·ªçi service getImagesByColorDesign...");
        const result = await designService.getImagesByColorDesign(productId, decodedColor);

        // console.log("‚úÖ K·∫øt qu·∫£ tr·∫£ v·ªÅ t·ª´ service:", result);

        return res.status(result.success ? 200 : 500).json(result);
    } catch (err) {
        console.error("üî• L·ªói t·∫°i controller getImagesByColorDesign:", err);
        return res.status(500).json({ success: false, message: "L·ªói server." });
    }
};


exports.saveUserDesign = async (req, res) => {
    try {
        const designService = new DesignService(MongoDB.client);
        const { madesign, masanpham, vitri, mau, overlays } = req.body;

        const result = await designService.saveUserDesign({
            madesign,
            masanpham,
            vitri,
            mau,
            overlays
        });

        return res.status(200).json(result);
    } catch (error) {
        console.error("‚ùå L·ªói khi l∆∞u thi·∫øt k·∫ø:", error.message);
        return res.status(500).json({
            success: false,
            message: "L·ªói khi l∆∞u thi·∫øt k·∫ø",
            error: error.message
        });
    }
};

exports.getDesignLink = async (req, res) => {
    try {
        const designId = req.params.designId;
        const designService = new DesignService(MongoDB.client);
        const link = await designService.getDesignLink(designId);  // link l√† chu·ªói ho·∫∑c null

        if (!link) {
            return res.status(404).json({ success: false, message: 'Design kh√¥ng t·ªìn t·∫°i ho·∫∑c kh√¥ng c√≥ link' });
        }

        return res.json({ success: true, link });
    } catch (error) {
        console.error('L·ªói khi l·∫•y link design:', error);
        return res.status(500).json({ success: false, message: 'L·ªói server' });
    }
};
