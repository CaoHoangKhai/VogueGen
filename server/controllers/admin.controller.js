const OrderService = require("../services/order.service");
const UserService = require("../services/user.service");
const ProductService = require("../services/product.service");
const MongoDB = require("../utils/mongodb.util");
exports.getListUsers = async (req, res, next) => {
    try {
        console.log("üì• [GET USERS] Y√™u c·∫ßu l·∫•y danh s√°ch ng∆∞·ªùi d√πng.");

        const userService = new UserService(MongoDB.client);
        const users = await userService.getListUser();

        if (!users.length) {
            console.warn("‚ö†Ô∏è [GET USERS] Kh√¥ng t√¨m th·∫•y ng∆∞·ªùi d√πng n√†o.");
            return res.status(404).json({ message: "Kh√¥ng t√¨m th·∫•y ng∆∞·ªùi d√πng n√†o." });
        }

        console.log(`‚úÖ [GET USERS] ƒê√£ l·∫•y ${users.length} ng∆∞·ªùi d√πng.`);
        return res.json(users);
    } catch (error) {
        console.error("‚ùå [GET USERS] L·ªói:", error.message);
        return res.status(500).json({ message: `L·ªói khi l·∫•y danh s√°ch ƒë·ªôc gi·∫£: ${error.message}` });
    }
};


exports.adminDashboard = async (req, res, next) => {
    try {
        const orderService = new OrderService(MongoDB.client);
        const userService = new UserService(MongoDB.client);
        const productService = new ProductService(MongoDB.client);

        console.log("üìä [ADMIN DASHBOARD] ƒêang t·ªïng h·ª£p d·ªØ li·ªáu...");

        const [
            customerCount,
            productCount,
            ordersIn28DaysResult,
            revenue28DaysResult
        ] = await Promise.all([
            userService.adminDashboard(), // H√†m tr·∫£ v·ªÅ s·ªë l∆∞·ª£ng kh√°ch h√†ng
            productService.totalProducts(), // H√†m tr·∫£ v·ªÅ s·ªë l∆∞·ª£ng s·∫£n ph·∫©m
            orderService.getOrdersInLast28Days(), // Tr·∫£ v·ªÅ danh s√°ch ƒë∆°n
            orderService.getRevenueInLast28Days() // Tr·∫£ v·ªÅ t·ªïng doanh thu
        ]);

        const totalOrders28days = ordersIn28DaysResult?.data?.length || 0;
        const totalRevenue28days = revenue28DaysResult?.totalRevenue || 0;

        return res.json({
            totalCustomers: customerCount,
            totalProducts: productCount,
            totalOrders28days,
            totalRevenue28days
        });
    } catch (error) {
        console.error("‚ùå [ADMIN DASHBOARD] L·ªói:", error.message);
        return res.status(500).json({
            message: `L·ªói khi l·∫•y d·ªØ li·ªáu dashboard: ${error.message}`
        });
    }
};
exports.toggleUserStatus = async (req, res, next) => {
    try {
        const userId = req.params.userId; // ‚úÖ ƒê√∫ng t√™n

        console.log(`üîÑ [TOGGLE USER STATUS] ƒêang c·∫≠p nh·∫≠t tr·∫°ng th√°i cho userId: ${userId}`);

        const userService = new UserService(MongoDB.client);
        const success = await userService.toggleUserStatus(userId);

        if (success) {
            console.log(`‚úÖ [TOGGLE USER STATUS] C·∫≠p nh·∫≠t th√†nh c√¥ng cho userId: ${userId}`);
            return res.status(200).json({ message: "C·∫≠p nh·∫≠t tr·∫°ng th√°i th√†nh c√¥ng." });
        } else {
            console.warn(`‚ö†Ô∏è [TOGGLE USER STATUS] Kh√¥ng t√¨m th·∫•y ho·∫∑c c·∫≠p nh·∫≠t th·∫•t b·∫°i cho userId: ${userId}`);
            return res.status(404).json({ message: "Kh√¥ng t√¨m th·∫•y ng∆∞·ªùi d√πng ho·∫∑c c·∫≠p nh·∫≠t th·∫•t b·∫°i." });
        }
    } catch (error) {
        console.error("‚ùå [TOGGLE USER STATUS] L·ªói:", error.message);
        return res.status(500).json({ message: "L·ªói server." });
    }
};
