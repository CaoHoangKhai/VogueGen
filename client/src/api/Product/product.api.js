import axios from "axios";

const BASE_URL_PRODUCTS = "http://localhost:4000/products";

// üìå L·∫•y to√†n b·ªô s·∫£n ph·∫©m (n·∫øu c√≥ route n√†y)
export const getAllProducts = async () => {
    try {
        const res = await axios.get(`${BASE_URL_PRODUCTS}`);
        return res.data;
    } catch (error) {
        console.error("‚ùå L·ªói khi l·∫•y t·∫•t c·∫£ s·∫£n ph·∫©m:", error);
        return [];
    }
};

// üìå L·∫•y s·∫£n ph·∫©m theo ID
export const getProductById = async (id) => {
    try {
        const res = await axios.get(`${BASE_URL_PRODUCTS}/${id}`);
        return res.data;
    } catch (error) {
        console.error("‚ùå L·ªói khi l·∫•y chi ti·∫øt s·∫£n ph·∫©m:", error);
        return null;
    }
};

// üìå L·∫•y danh s√°ch m√†u s·∫Øc theo ID s·∫£n ph·∫©m
export const getColorsByProductId = async (productId) => {
    try {
        const res = await axios.get(`${BASE_URL_PRODUCTS}/${productId}/colors`);
        return res.data;
    } catch (error) {
        console.error("‚ùå L·ªói khi l·∫•y m√†u s·∫Øc s·∫£n ph·∫©m:", error);
        return [];
    }
};



// üìå L·∫•y danh s√°ch ·∫£nh theo m√†u s·∫£n ph·∫©m
export const getImagesByColor = async (productId, colorCode) => {
    try {
        const encodedColor = encodeURIComponent(colorCode); // ‚Üê th√™m d√≤ng n√†y
        const res = await axios.get(`${BASE_URL_PRODUCTS}/${productId}/images/${encodedColor}`);
        return res.data;
    } catch (error) {
        console.error("‚ùå L·ªói khi l·∫•y ·∫£nh theo m√†u s·∫£n ph·∫©m:", error);
        return [];
    }
};


// üìå L·∫•y danh s√°ch s·∫£n ph·∫©m theo slug danh m·ª•c (category)
export const getProductsByCategorySlug = async (slug) => {
    try {
        const res = await axios.get(`${BASE_URL_PRODUCTS}/category/${slug}`);
        return res.data;
    } catch (error) {
        console.error("‚ùå L·ªói khi l·∫•y s·∫£n ph·∫©m theo danh m·ª•c:", error);
        return [];
    }
};
export const createProduct = async (formData) => {
    try {
        const response = await fetch(`${BASE_URL_PRODUCTS}/products`, {
            method: "POST",
            body: formData,
        });

        const result = await response.json();

        if (!response.ok) {
            console.error("‚ùå Server tr·∫£ l·ªói:", result);
            throw new Error(result?.error || "L·ªói kh√¥ng x√°c ƒë·ªãnh t·ª´ server");
        }

        return result; // v√≠ d·ª•: { message: "T·∫°o s·∫£n ph·∫©m th√†nh c√¥ng", id, ... }
    } catch (error) {
        console.error("‚ùå L·ªói POST /products:", error);
        return { success: false, error: error.message };
    }
};

// üìå L·∫•y top s·∫£n ph·∫©m b√°n ch·∫°y (m·∫∑c ƒë·ªãnh l√† 5)
export const getTopSellingProducts = async () => {
    try {
        const res = await axios.get(`${BASE_URL_PRODUCTS}/best-selling`);
        return res.data.products; // ho·∫∑c res.data t√πy theo structure b·∫°n tr·∫£ t·ª´ server
    } catch (error) {
        console.error("‚ùå L·ªói khi l·∫•y s·∫£n ph·∫©m b√°n ch·∫°y:", error);
        return [];
    }
};
