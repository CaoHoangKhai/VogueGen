import React, { useEffect, useState } from 'react';
import {
  getCartByUserId,
  updateCartQuantity,
  increaseCartQuantity,
  decreaseCartQuantity
} from '../../api/Cart/cart.api';
import Toast from "../../Components/Toast";

const Cart = () => {
  const [cartItems, setCartItems] = useState([]);
  const [loading, setLoading] = useState(true);
  const [inputValues, setInputValues] = useState({});
  const [toast, setToast] = useState({ show: false, message: "", type: "" });

  // üÜî L·∫•y userId t·ª´ localStorage
  const userData = localStorage.getItem('user');
  const userId = userData ? JSON.parse(userData)._id : null;

  // üõí H√†m load gi·ªè h√†ng
  const loadCart = () => {
    if (!userId) {
      setCartItems([]);
      setInputValues({});
      return;
    }
    getCartByUserId(userId)
      .then(res => {
        const data = res.data || [];
        console.log("üì• [Cart] Data nh·∫≠n t·ª´ API:", data);

        setCartItems(data);

        // Set gi√° tr·ªã input s·ªë l∆∞·ª£ng ban ƒë·∫ßu
        const values = {};
        data.forEach(item => {
          values[item._id] = item.soluong?.toString() ?? "1";
        });
        setInputValues(values);
        setLoading(false);
      })
      .catch(err => {
        console.error("‚ùå L·ªói load gi·ªè h√†ng:", err);
        setToast({ show: true, message: "Kh√¥ng th·ªÉ t·∫£i gi·ªè h√†ng.", type: "error" });
        setCartItems([]);
        setInputValues({});
        setLoading(false);
      });
  };

  // üîÑ Load cart khi userId thay ƒë·ªïi
  useEffect(() => {
    loadCart();
  }, [userId]);

  // üî¢ Khi thay ƒë·ªïi input s·ªë l∆∞·ª£ng
  const handleInputChange = (item, value) => {
    const onlyNumber = value.replace(/[^0-9]/g, '');
    setInputValues(prev => ({
      ...prev,
      [item._id]: onlyNumber
    }));
  };

  // üì§ Khi input m·∫•t focus
  const handleInputBlur = (item) => {
    let raw = inputValues[item._id];
    let val = parseInt(raw, 10);
    if (isNaN(val) || val < 1) val = 1;
    if (val === item.soluong) return;

    updateCartQuantity(item._id, { soluong: val })
      .then(res => {
        const { success, message } = res.data;
        setToast({
          show: true,
          message: message || (success ? "‚úÖ C·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng th√†nh c√¥ng!" : "‚ö†Ô∏è Kh√¥ng th·ªÉ c·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng."),
          type: success ? "success" : "warning"
        });
        loadCart();
      })
      .catch(err => {
        const msg = err.response?.data?.message || "‚ùå L·ªói server khi c·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng.";
        setToast({ show: true, message: msg, type: "error" });
      });
  };

  // üîº TƒÉng s·ªë l∆∞·ª£ng
  const handleIncrease = (item) => {
    increaseCartQuantity(item._id)
      .then(res => {
        const { success, message } = res.data;
        setToast({
          show: true,
          message: message || (success ? "‚úÖ TƒÉng s·ªë l∆∞·ª£ng th√†nh c√¥ng!" : "‚ö†Ô∏è Kh√¥ng th·ªÉ tƒÉng s·ªë l∆∞·ª£ng."),
          type: success ? "success" : "warning"
        });
        loadCart();
      })
      .catch(err => {
        const msg = err.response?.data?.message || "‚ùå L·ªói server khi tƒÉng s·ªë l∆∞·ª£ng.";
        setToast({ show: true, message: msg, type: "error" });
      });
  };

  // üîΩ Gi·∫£m s·ªë l∆∞·ª£ng
  const handleDecrease = (item) => {
    // Check FE tr∆∞·ªõc
    if ((item.isThietKe || item.madesign) && item.soluong <= 50) {
      setToast({ show: true, message: "‚ö†Ô∏è S·∫£n ph·∫©m thi·∫øt k·∫ø t·ªëi thi·ªÉu s·ªë l∆∞·ª£ng l√† 50!", type: "warning" });
      return;
    }
    if (item.soluong <= 1) return;

    decreaseCartQuantity(item._id)
      .then(res => {
        const { success, message } = res.data;
        setToast({
          show: true,
          message: message || (success ? "‚úÖ Gi·∫£m s·ªë l∆∞·ª£ng th√†nh c√¥ng!" : "‚ö†Ô∏è Kh√¥ng th·ªÉ gi·∫£m s·ªë l∆∞·ª£ng."),
          type: success ? "success" : "warning"
        });
        loadCart();
      })
      .catch(err => {
        const msg = err.response?.data?.message || "‚ùå L·ªói server khi gi·∫£m s·ªë l∆∞·ª£ng.";
        setToast({ show: true, message: msg, type: "error" });
      });
  };

  // üóë X√≥a s·∫£n ph·∫©m
  const handleRemoveItem = (item) => {
    updateCartQuantity(item._id, { soluong: 0 })
      .then(res => {
        const { success, message } = res.data;
        setToast({
          show: true,
          message: message || (success ? "üóë ƒê√£ x√≥a s·∫£n ph·∫©m!" : "‚ö†Ô∏è Kh√¥ng th·ªÉ x√≥a s·∫£n ph·∫©m."),
          type: success ? "success" : "warning"
        });
        loadCart();
      })
      .catch(err => {
        const msg = err.response?.data?.message || "‚ùå X√≥a s·∫£n ph·∫©m th·∫•t b·∫°i.";
        setToast({ show: true, message: msg, type: "error" });
      });
  };

  // üì¶ Khi click v√†o d√≤ng s·∫£n ph·∫©m -> xem chi ti·∫øt
  const handleRowClick = (item) => {
    if (item.designLink) {
      window.location.href = `http://localhost:3000/design/${item.designLink}`;
    } else {
      window.location.href = `http://localhost:3000/products/detail/${item.masanpham}`;
    }
  };

  // üíµ T√≠nh t·ªïng ti·ªÅn
  const total = cartItems.reduce(
    (sum, item) => sum + (item.giasanpham || 0) * (item.soluong || 1),
    0
  );
  const openBase64Image = (base64Data) => {
    // T√°ch header (data:image/png;base64,) v√† ph·∫ßn base64 thu·∫ßn
    const arr = base64Data.split(",");
    const mime = arr[0].match(/:(.*?);/)[1];
    const bstr = atob(arr[1]);
    let n = bstr.length;
    const u8arr = new Uint8Array(n);

    while (n--) {
      u8arr[n] = bstr.charCodeAt(n);
    }

    // T·∫°o Blob v√† URL t·∫°m
    const blob = new Blob([u8arr], { type: mime });
    const url = URL.createObjectURL(blob);

    // M·ªü ·∫£nh trong tab m·ªõi
    window.open(url, "_blank");

    // (Tu·ª≥ ch·ªçn) Gi·∫£i ph√≥ng URL sau 1 ph√∫t cho an to√†n
    setTimeout(() => URL.revokeObjectURL(url), 60000);
  };

  return (
    <div className="container mt-4">
      <Toast show={toast.show} message={toast.message} type={toast.type} onClose={() => setToast({ ...toast, show: false })} />
      <div className="row">
        {/* üõí Gi·ªè h√†ng */}
        <div className="col-md-9">
          <div className="card mb-3">
            <div className="card-header fw-bold">Gi·ªè h√†ng c·ªßa b·∫°n</div>
            <div className="card-body">
              {loading ? (
                <p>ƒêang t·∫£i...</p>
              ) : cartItems.length === 0 ? (
                <p>Ch∆∞a c√≥ s·∫£n ph·∫©m n√†o trong gi·ªè h√†ng.</p>
              ) : (
                <table className="table table-striped table-hover align-middle text-nowrap">
                  <thead className="table-light">
                    <tr className="text-center">
                      <th>H√¨nh ·∫£nh</th>
                      <th>S·∫£n ph·∫©m</th>
                      <th>Size</th>
                      <th>M√†u</th>
                      <th>S·ªë l∆∞·ª£ng</th>
                      <th>Gi√°</th>
                      <th>Th√†nh ti·ªÅn</th>
                      <th></th>
                    </tr>
                  </thead>
                  <tbody>
                    {cartItems.map(item => (
                      <tr
                        key={item._id}
                        style={{ cursor: 'pointer' }}
                        onClick={() => handleRowClick(item)}
                      >
                        {/* üñº H√¨nh ·∫£nh */}
                        <td style={{ width: 120, height: 60 }}>
                          <div style={{ display: "flex", width: "100%", height: "100%", gap: 4 }}>
                            {/* N·∫øu c√≥ front/back ‚Üí s·∫£n ph·∫©m custom */}
                            {item.hinhanhFront || item.hinhanhBack ? (
                              <>
                                {/* Front */}
                                <img
                                  src={item.hinhanhFront}
                                  alt="Front"
                                  style={{
                                    width: "50%",
                                    height: "100%",
                                    objectFit: "cover",
                                    border: "1px solid #ddd",
                                    borderRadius: 4,
                                    cursor: "zoom-in",
                                  }}
                                  onClick={(e) => {
                                    e.stopPropagation();
                                    openBase64Image(item.hinhanhFront);
                                  }}
                                />

                                {/* Back (n·∫øu c√≥) */}
                                {item.hinhanhBack && (
                                  <img
                                    src={item.hinhanhBack}
                                    alt="Back"
                                    style={{
                                      width: "50%",
                                      height: "100%",
                                      objectFit: "cover",
                                      border: "1px solid #ddd",
                                      borderRadius: 4,
                                      cursor: "zoom-in",
                                    }}
                                    onClick={(e) => {
                                      e.stopPropagation();
                                      openBase64Image(item.hinhanhBack);
                                    }}
                                  />
                                )}
                              </>
                            ) : (
                              /* N·∫øu ch·ªâ c√≥ ·∫£nh s·∫£n ph·∫©m ti√™u chu·∫©n */
                              <img
                                src={item.hinhanh}
                                alt={item.tensanpham}
                                style={{
                                  width: "100%",
                                  height: "100%",
                                  objectFit: "cover",
                                  border: "1px solid #ddd",
                                  borderRadius: 4,
                                  cursor: "zoom-in",
                                }}
                                onClick={(e) => {
                                  e.stopPropagation();
                                  openBase64Image(item.hinhanh);
                                }}
                              />
                            )}
                          </div>
                        </td>
                        {/* üè∑ T√™n s·∫£n ph·∫©m */}
                        <td>
                          <div>
                            <div>{item.tensanpham || item.masanpham}</div>
                            <small className="text-muted">
                              {item.madesign ? "Thi·∫øt k·∫ø ri√™ng" : "S·∫£n ph·∫©m ti√™u chu·∫©n"}
                            </small>
                          </div>
                        </td>

                        {/* üìè Size */}
                        <td>{item.size}</td>

                        {/* üé® M√†u */}
                        <td>
                          <span
                            className="d-inline-block"
                            style={{
                              width: 20,
                              height: 20,
                              backgroundColor: item.mausac,
                              border: "1px solid #ccc",
                              borderRadius: 4
                            }}
                            title={item.mausac}
                          />
                        </td>

                        {/* üî¢ S·ªë l∆∞·ª£ng */}
                        <td>
                          <div className="input-group input-group-sm">
                            <button
                              className="btn btn-outline-secondary"
                              onClick={(e) => { e.stopPropagation(); handleDecrease(item); }}
                            >-</button>
                            <input
                              type="text"
                              value={inputValues[item._id] || ''}
                              onClick={(e) => e.stopPropagation()}
                              onChange={(e) => { e.stopPropagation(); handleInputChange(item, e.target.value); }}
                              onBlur={() => handleInputBlur(item)}
                              className="form-control text-center shadow-none bg-light"
                              style={{ width: "4rem", minWidth: 60 }}
                            />
                            <button
                              className="btn btn-outline-secondary"
                              onClick={(e) => { e.stopPropagation(); handleIncrease(item); }}
                            >+</button>
                          </div>
                        </td>

                        {/* üí∞ Gi√° ƒë∆°n */}
                        <td>{(item.giasanpham || 0).toLocaleString("vi-VN")} ƒë</td>

                        {/* üíµ Th√†nh ti·ªÅn */}
                        <td>{((item.giasanpham || 0) * (item.soluong || 1)).toLocaleString("vi-VN")} ƒë</td>

                        {/* üóë X√≥a */}
                        <td className="text-center">
                          <button
                            className="btn btn-sm btn-outline-danger"
                            onClick={(e) => { e.stopPropagation(); handleRemoveItem(item); }}
                          >
                            <i className="bi bi-trash" />
                          </button>
                        </td>
                      </tr>
                    ))}
                  </tbody>
                </table>
              )}
            </div>
          </div>
        </div>

        {/* üì¶ Thanh to√°n */}
        <div className="col-md-3">
          <div className="card" style={{ position: "sticky", top: "80px", zIndex: 10 }}>
            <div className="card-header fw-bold">Thanh to√°n</div>
            <div className="card-body">
              {cartItems.length > 0 ? (
                <>
                  <p>T·ªïng ti·ªÅn: {total.toLocaleString("vi-VN")}ƒë</p>
                  <button className="btn btn-primary w-100" onClick={() => window.location.href = "/auth/order"}>
                    ƒê·∫∑t h√†ng
                  </button>
                </>
              ) : (
                <div className="text-muted text-center small">
                  <p>Kh√¥ng c√≥ s·∫£n ph·∫©m.</p>
                  <button className="btn btn-secondary w-100" disabled>ƒê·∫∑t h√†ng</button>
                </div>
              )}
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Cart;