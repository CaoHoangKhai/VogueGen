import { useState, useEffect } from "react";
import axios from "axios";

const CategoryManager = () => {
    const [categories, setCategories] = useState([]);
    const [newCategory, setNewCategory] = useState("");
    const [message, setMessage] = useState("");
    const [loading, setLoading] = useState(false);

    useEffect(() => {
        fetchCategories();
    }, []);

    const fetchCategories = async () => {
        try {
            const response = await axios.get("http://localhost:4000/admin/categories");
            setCategories(response.data);
        } catch (error) {
            console.error("L·ªói khi l·∫•y danh m·ª•c:", error);
            setMessage("Kh√¥ng th·ªÉ l·∫•y danh s√°ch danh m·ª•c.");
        }
    };

    const handleAddCategory = async () => {
        if (!newCategory.trim()) {
            setMessage("‚ö†Ô∏è T√™n danh m·ª•c kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng.");
            return;
        }

        setLoading(true);
        try {
            const response = await axios.post("http://localhost:4000/admin/categories", {
                tendanhmuc: newCategory.trim(),
            });

            if (response.data.insertedId) {
                setMessage("‚úÖ Th√™m danh m·ª•c th√†nh c√¥ng.");
                setNewCategory("");
                fetchCategories();
            } else {
                setMessage("‚ö†Ô∏è Danh m·ª•c ƒë√£ t·ªìn t·∫°i ho·∫∑c th√™m th·∫•t b·∫°i.");
            }
        } catch (error) {
            console.error("L·ªói khi th√™m danh m·ª•c:", error);
            setMessage("‚ùå L·ªói x·∫£y ra khi th√™m danh m·ª•c.");
        } finally {
            setLoading(false);
        }
    };

    return (
        <div className="container">
            <div className="card shadow-sm">
                <div className="card-header text-dark text-center">
                    <h4>Qu·∫£n l√Ω Danh M·ª•c S·∫£n Ph·∫©m</h4>
                </div>

                <div className="card-body">
                    {/* Th√™m danh m·ª•c */}
                    <div className="row mb-4">
                        <div className="col-md-9">
                            <input
                                type="text"
                                className="form-control"
                                placeholder="Nh·∫≠p t√™n danh m·ª•c m·ªõi..."
                                value={newCategory}
                                onChange={(e) => setNewCategory(e.target.value)}
                            />
                        </div>
                        <div className="col-md-3 d-grid">
                            <button
                                className="btn btn-success"
                                onClick={handleAddCategory}
                                disabled={loading}
                            >
                                {loading ? "ƒêang th√™m..." : "‚ûï Th√™m Danh M·ª•c"}
                            </button>
                        </div>
                    </div>

                    {/* Th√¥ng b√°o */}
                    {message && (
                        <div className="alert alert-info text-center" role="alert">
                            {message}
                        </div>
                    )}

                    {/* Danh s√°ch danh m·ª•c */}
                    <div className="d-flex justify-content-between align-items-center mb-2">
                        <h5 className="mb-0">üìã Danh s√°ch danh m·ª•c</h5>
                        <button className="btn btn-outline-primary btn-sm" onClick={fetchCategories}>
                            üîÑ L√†m m·ªõi
                        </button>
                    </div>
                    <table className="table table-bordered table-hover text-center">
                        <thead className="table-light">
                            <tr>
                                <th>STT</th>
                                <th>T√™n Danh M·ª•c</th>
                                <th></th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            {categories.length > 0 ? (
                                categories.map((item, index) => (
                                    <tr key={item._id}>
                                        <td className="col-1">{index + 1}</td>
                                        <td className="col">{item.tendanhmuc}</td>
                                        <td></td>
                                        <td></td>
                                    </tr>
                                ))
                            ) : (
                                <tr>
                                    <td colSpan="2" className="text-muted">
                                        Kh√¥ng c√≥ danh m·ª•c n√†o.
                                    </td>
                                </tr>
                            )}
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    );
};

export default CategoryManager;
